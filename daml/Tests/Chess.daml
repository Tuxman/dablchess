-- Copyright (c) 2019 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module Tests.Chess where

import DA.Assert

import Init
import Types

testEnum = scenario do
  let lst = [0..63]
  let coords = [A1 .. H8]
  lst === fmap fromEnum coords

testFoolsMate = scenario do
  InitData {..} <- initData

  let moves = [ (G2, G4)
              , (E7, E6)
              , (F2, F4)
              , (D8, H4)
              ]
      moves' = orderedCoordsToMoves white black moves
      game = (activeSideOfGameId, passiveSideOfGameId)
  game <- foldl submitMove (return $ Right game) moves'

  win <- case game of
    Right _ -> abort "Should be a win"
    Left win -> submit operator do fetch win

  Winner black === win.drawOrWinner
